basePath: /
definitions:
  dto.UserLogin:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  dto.UserRegister:
    properties:
      age:
        type: integer
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - age
    - email
    - password
    - username
    type: object
  responses.ErrorMessage:
    properties:
      error_message:
        type: string
    type: object
  responses.UserLogin:
    properties:
      token:
        type: string
    type: object
  responses.UserRegister:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: m.evan.aw@google.com
    name: Muhammad Evan Anindya Wahyuaji
  description: API server for MyGram social media in "Scalable Webservice with Golang"
    course from Hacktiv8 Ã— Kominfo.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Order API
  version: "1.0"
paths:
  /users/login:
    post:
      consumes:
      - application/json
      description: Login a user.
      parameters:
      - description: JSON of the user to login.
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.UserLogin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.UserLogin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
      summary: Login a user
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Register a user.
      parameters:
      - description: JSON of the user to be made.
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegister'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.UserRegister'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
      summary: Register a user
      tags:
      - users
swagger: "2.0"
